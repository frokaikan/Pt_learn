根据PtBook，每个Model都分为五步：
Preinitialize :: 静态分析，创建内部角色。只执行一次，包括New
Initialize :: 参数初始化，重置本地状态。可能执行多次
---iterate---
Prefile :: 检测先决条件
Fire :: 读入数据，计算，产生输出
Postfire :: 更新角色状态
---iterate end---
/* 伪继承 ::
若A伪继承B，则A具有和B完全相同的代码，并且在最后有自己独有的代码
通过(struct B*)(ptA)来获取B部分的成员。
本例中SDFDirector伪继承自Director
*/

main() <$(MODEL)_Main.c>
    initialize() 
        preinitialize()
            // Step 1 :: New
            model_New() <_$(MODEL)/$(MODEL).c>
                CompositeActor_New() <commons/_CompositeActor.c>
                    分配CompisiteActor
                    CompositeActor_Init()
                        Actor_Init() <commons/_Actor.c>
                SDFDirector_New() <commons/_SDFDirector.c>
                    分配SDFDirector
                    SDFDirector_Init()
                        Director_Init() <commons/_Director.c>
                // 以AddSubstract为例说明如何建立IOPorts
                $(MODEL)_Display_New()
                $(MODEL)_Ramp_New()
                $(MODEL)_Const_New()
                $(MODEL)_AddSubstract_New()
                    AtomicActor_New()
                        // 定义IO端口列表
                        PblList *_inputPorts, *_outputPorts;
                        TypedIOPort *plus;
                        // 将IO端口分别加入端口列表中
                        pblListAdd(_inputPorts, plus);
                        PblList *plus_0;
                        // 对于Input端口，定义Receiver
                        SDFReceiver *plus_0_0 = SDFReceiver_New();
                        SDFReceiver_New() <commons/_SDFReceiver.c>
                            SDFReceiver_Init()
                                Receiver_Init() <commons/_Receiver.c>
                        pblListAdd(plus_0, plus_0_0);
                        pblListAdd(_localReceiver, plus_0);
                        TypedIOPort *minus;类似
                        TypedIOPort *output;也类似，区别在：
                        ①没有SDFReceiver
                        ②pblListAdd(_farReceivers, output__0);
                        ③Output端口没有Sender
                建立IOPorts之间连接关系（硬编码）
                /* 
                pblListAdd(pblListGet(model2_Ramp_output->_farReceivers, 0), pblListGet(pblListGet(model2_AddSubtract_plus->_localReceivers, 0), 0));
                将output的_farReceiver和input的_localReceivers关联
                */
            // Step 2 :: Preinitialize
            $(MODEL)->preinitialize
            >> CompositeActor_Preinitialize() <commons/_CompositeActor.c>
                director->preinitialize
                >> Director_Preinitialize() <commons/_Director.c> , SDFDirector无修改
                    localClock->initialize
                    >> LocalClock_Initialize() <commons/_LocalClock.c>
                for all actors as %actor do %actor->preinitialize(director, %actor)
                /*
                将Ramp的step置为10，然而并没有什么卵用（Initialize做了同样的工作）
                其他的Actor全是空的，不知道有什么卵用
                */
                // 伪继承结束
            // Step 3 :: Initialize
            $(MODEL)->Initialize
            >> CompositeActor_Initialize() <commons/_CompositeActor.c>
                director->initialize
                >> Director_Initialize() <commons/_Director.c> , SDFDirector有修改
                    localClock->resetLocalTime
                    >> LocalClock_ResetLocalTime() <commons/_LocalClock.c>
                    localClock->start
                    >> LocalClock_Start() <commons/_LocalClock.c>
                for all actors as %actor do %actor->initialize(director, actor)
                /*
                设定Ramp的state和step
                其他的Actor是空的
                */
                // 伪继承结束
                /* 然后不知道在干啥 */
    // Step 4-6 :: loop - Iterate (Prefile<bool> Fire Postfire<bool>)
    /*
    loop iterate() ::
        switch prefire()
        case true : // prefire
            fire()
            switch postfile()
            case true : // postfire
                next loop;
            case false : // postfire
                break loop;
        case false : // prefire
            next loop;
    */
    iterate()
        // Step 4 :: Prefire
        $(MODEL)->prefire
        >> CompositeActor_Prefire() <commons/_CompositeActor.c>
            return director->prefire
            >> Director_Prefire() <commons/_Director.c> , SDFDirector有修改
                localClock->getLocalTimeForCurrentEnvironmentTime
                >> LocalClock_GetLocalTimeForCurrentEnvironmentTime() <commons/_LocalClock.c>
                localClock->setLocalTime
                >> LocalClock_SetLocalTime() <commons/_LocalClock.c>
                return true
            // 伪继承结束
            /* 接下来还是不知道在干啥 */
        // Step 5 :: Fire (Main Evaluate)
        $(MODEL)->fire
        >> CompositeActor_Fire <commons/CompositeActor.c>
            actor->_transferPortParameterInputs
            >> CompositeActor__TransferPortParameterInputs
                // 空...?没写完?
            /* for _Director.c , not _SDFDirector.c
            for all inputPorts as %IP do Director_TransferInputs(director, %IP) <commons/_Director.c>
            */
            director->fire // 逻辑完全变样
            >> model2_Schedule_iterate() <_$(MODEL)/$(MODEL)_SDFSchedule.c>
                for all actors as %actor do %actor->iterate()
                >> AtomicActor_Iterate() <commons/_AtomicActor.c>
                /*
                按照Schedule中的顺序依次Fire
                四个actor的prefire和postfire都啥都不干
                除了AddSubstract外的三个actor都简单进行输入/输出工作
                AddSubstract读取输入并给出输出
                */
            /* for _Director.c , not _SDFDirector.c
            director->transferOutputs
            >> Director_TransferOutputs() <commons/_Director.c>
                for all outputports as %OP do Director_TransferOutputs1(director, %OP)
            */
        // Step 6 :: Postfire
        $(MODEL)->postfire
        >> CompositeActor_Postfire() <commons/_CompositeActor.c>
            director->postfire
            >> SDFDirector_Postfire() <commons/_SDFDirector.c> , SDFDirector有修改
                bool result; // 检测是否到达了迭代上限
                return result && director->postfire
                >> Director_Postfire() <commons/_Director.c>
                    return true;
                    /* 啥都没干... */
    // Step 7 :: wrapup
    $(MODEL)->wrapup
    >> CompositeActor_Wrapup() <commons/_CompositeActor.c>
        director->wrapup
        >> Director_Wrapup() <commons/_Director.c> , SDFDirector无修改
            for all actors as %actor do %actor->wrapup
            /* 四个actor都啥都没干 */
                